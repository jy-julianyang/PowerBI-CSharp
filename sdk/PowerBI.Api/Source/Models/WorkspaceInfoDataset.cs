// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.PowerBI.Api.Models
{
    /// <summary> A Power BI dataset returned by WorkspaceInfo APIs. The API returns a subset of the following list of dataset properties. The subset depends on the API called, caller permissions, and the availability of the data in the Power BI database. </summary>
    public partial class WorkspaceInfoDataset : DatasetBaseProperties
    {
        /// <summary> Initializes a new instance of <see cref="WorkspaceInfoDataset"/>. </summary>
        /// <param name="id"> The dataset ID. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> is null. </exception>
        public WorkspaceInfoDataset(string id) : base(id)
        {
            Argument.AssertNotNull(id, nameof(id));

            Tables = new ChangeTrackingList<Table>();
            Expressions = new ChangeTrackingList<Expression>();
            Roles = new ChangeTrackingList<Role>();
            DatasourceUsages = new ChangeTrackingList<DatasourceUsage>();
            MisconfiguredDatasourceUsages = new ChangeTrackingList<DatasourceUsage>();
            UpstreamDatamarts = new ChangeTrackingList<DependentDatamart>();
            UpstreamDatasets = new ChangeTrackingList<DependentDataset>();
            Users = new ChangeTrackingList<DatasetUser>();
        }

        /// <summary> Initializes a new instance of <see cref="WorkspaceInfoDataset"/>. </summary>
        /// <param name="id"> The dataset ID. </param>
        /// <param name="name"> The dataset name. </param>
        /// <param name="configuredBy"> The dataset owner. </param>
        /// <param name="createdDate"> The dataset creation date and time. </param>
        /// <param name="contentProviderType"> The content provider type for the dataset. </param>
        /// <param name="description"> The dataset description. </param>
        /// <param name="upstreamDataflows"> The list of all the dataflows this item depends on. </param>
        /// <param name="tables"> The dataset tables. </param>
        /// <param name="schemaRetrievalError"> The dataset schema retrieval error. </param>
        /// <param name="schemaMayNotBeUpToDate"> Whether the dataset schema might not be up to date. </param>
        /// <param name="expressions"> The dataset expressions. </param>
        /// <param name="roles"> The dataset roles. </param>
        /// <param name="endorsementDetails"> The endorsement details. </param>
        /// <param name="sensitivityLabel"> The sensitivity label. </param>
        /// <param name="targetStorageMode"> The dataset storage mode. </param>
        /// <param name="datasourceUsages"> The data source usages. </param>
        /// <param name="misconfiguredDatasourceUsages"> The data source misconfigured usages. </param>
        /// <param name="upstreamDatamarts"> The list of all the datamarts this item depends on. </param>
        /// <param name="upstreamDatasets"> The upstream datasets. </param>
        /// <param name="users"> (Empty value) The dataset user access details. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI item (such as a report or a dashboard) by using the [Get Dataset Users as Admin](/rest/api/power-bi/admin/datasets-get-dataset-users-as-admin) API, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API with the `getArtifactUsers` parameter. </param>
        internal WorkspaceInfoDataset(string id, string name, string configuredBy, DateTimeOffset? createdDate, string contentProviderType, string description, IList<DependentDataflow> upstreamDataflows, IList<Table> tables, string schemaRetrievalError, bool? schemaMayNotBeUpToDate, IList<Expression> expressions, IList<Role> roles, EndorsementDetails endorsementDetails, SensitivityLabel sensitivityLabel, string targetStorageMode, IList<DatasourceUsage> datasourceUsages, IList<DatasourceUsage> misconfiguredDatasourceUsages, IList<DependentDatamart> upstreamDatamarts, IList<DependentDataset> upstreamDatasets, IList<DatasetUser> users) : base(id, name, configuredBy, createdDate, contentProviderType, description, upstreamDataflows)
        {
            Tables = tables;
            SchemaRetrievalError = schemaRetrievalError;
            SchemaMayNotBeUpToDate = schemaMayNotBeUpToDate;
            Expressions = expressions;
            Roles = roles;
            EndorsementDetails = endorsementDetails;
            SensitivityLabel = sensitivityLabel;
            TargetStorageMode = targetStorageMode;
            DatasourceUsages = datasourceUsages;
            MisconfiguredDatasourceUsages = misconfiguredDatasourceUsages;
            UpstreamDatamarts = upstreamDatamarts;
            UpstreamDatasets = upstreamDatasets;
            Users = users;
        }

        /// <summary> The dataset tables. </summary>
        public IList<Table> Tables { get; }
        /// <summary> The dataset schema retrieval error. </summary>
        public string SchemaRetrievalError { get; set; }
        /// <summary> Whether the dataset schema might not be up to date. </summary>
        public bool? SchemaMayNotBeUpToDate { get; set; }
        /// <summary> The dataset expressions. </summary>
        public IList<Expression> Expressions { get; }
        /// <summary> The dataset roles. </summary>
        public IList<Role> Roles { get; }
        /// <summary> The endorsement details. </summary>
        public EndorsementDetails EndorsementDetails { get; set; }
        /// <summary> The sensitivity label. </summary>
        public SensitivityLabel SensitivityLabel { get; set; }
        /// <summary> The dataset storage mode. </summary>
        public string TargetStorageMode { get; set; }
        /// <summary> The data source usages. </summary>
        public IList<DatasourceUsage> DatasourceUsages { get; }
        /// <summary> The data source misconfigured usages. </summary>
        public IList<DatasourceUsage> MisconfiguredDatasourceUsages { get; }
        /// <summary> The list of all the datamarts this item depends on. </summary>
        public IList<DependentDatamart> UpstreamDatamarts { get; }
        /// <summary> The upstream datasets. </summary>
        public IList<DependentDataset> UpstreamDatasets { get; }
        /// <summary> (Empty value) The dataset user access details. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI item (such as a report or a dashboard) by using the [Get Dataset Users as Admin](/rest/api/power-bi/admin/datasets-get-dataset-users-as-admin) API, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API with the `getArtifactUsers` parameter. </summary>
        public IList<DatasetUser> Users { get; }
    }
}
