// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class GoalRefreshHistory
    {
        internal static GoalRefreshHistory DeserializeGoalRefreshHistory(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Guid? goalId = default;
            GoalValueType? connectionType = default;
            GoalProcessingStatus? status = default;
            DateTimeOffset? timestamp = default;
            Guid? rootActivityId = default;
            string message = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("goalId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    goalId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("connectionType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    connectionType = property.Value.GetString().ToGoalValueType();
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    status = property.Value.GetString().ToGoalProcessingStatus();
                    continue;
                }
                if (property.NameEquals("timestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    timestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("rootActivityId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    rootActivityId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("message"u8))
                {
                    message = property.Value.GetString();
                    continue;
                }
            }
            return new GoalRefreshHistory(
                goalId,
                connectionType,
                status,
                timestamp,
                rootActivityId,
                message);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static GoalRefreshHistory FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeGoalRefreshHistory(document.RootElement);
        }
    }
}
