// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Microsoft.PowerBI.Api.Models
{
    /// <summary> Effective identity for connecting DirectQuery data sources with single sign-on (SSO) enabled. </summary>
    public partial class DatasourceIdentity
    {
        /// <summary> Initializes a new instance of <see cref="DatasourceIdentity"/>. </summary>
        /// <param name="identityBlob"> A blob for specifying the identity. </param>
        /// <param name="datasources"> An array of data sources that this identity applies to. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="identityBlob"/> or <paramref name="datasources"/> is null. </exception>
        public DatasourceIdentity(string identityBlob, IEnumerable<DatasourceSelector> datasources)
        {
            Argument.AssertNotNull(identityBlob, nameof(identityBlob));
            Argument.AssertNotNull(datasources, nameof(datasources));

            IdentityBlob = identityBlob;
            Datasources = datasources.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="DatasourceIdentity"/>. </summary>
        /// <param name="identityBlob"> A blob for specifying the identity. </param>
        /// <param name="datasources"> An array of data sources that this identity applies to. </param>
        internal DatasourceIdentity(string identityBlob, IList<DatasourceSelector> datasources)
        {
            IdentityBlob = identityBlob;
            Datasources = datasources;
        }

        /// <summary> A blob for specifying the identity. </summary>
        public string IdentityBlob { get; }
        /// <summary> An array of data sources that this identity applies to. </summary>
        public IList<DatasourceSelector> Datasources { get; }
    }
}
