// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Microsoft.PowerBI.Api.Models
{
    internal static partial class DashboardUserAccessRightExtensions
    {
        public static string ToSerialString(this DashboardUserAccessRight value) => value switch
        {
            DashboardUserAccessRight.None => "None",
            DashboardUserAccessRight.Read => "Read",
            DashboardUserAccessRight.ReadWrite => "ReadWrite",
            DashboardUserAccessRight.ReadReshare => "ReadReshare",
            DashboardUserAccessRight.ReadCopy => "ReadCopy",
            DashboardUserAccessRight.Owner => "Owner",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown DashboardUserAccessRight value.")
        };

        public static DashboardUserAccessRight ToDashboardUserAccessRight(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "None")) return DashboardUserAccessRight.None;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Read")) return DashboardUserAccessRight.Read;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "ReadWrite")) return DashboardUserAccessRight.ReadWrite;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "ReadReshare")) return DashboardUserAccessRight.ReadReshare;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "ReadCopy")) return DashboardUserAccessRight.ReadCopy;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Owner")) return DashboardUserAccessRight.Owner;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown DashboardUserAccessRight value.");
        }
    }
}
