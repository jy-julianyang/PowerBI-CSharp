// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class DeploymentExecutionStep
    {
        internal static DeploymentExecutionStep DeserializeDeploymentExecutionStep(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            int index = default;
            DeploymentStepType type = default;
            PipelineOperationStatus status = default;
            DeploymentExecutionStepPreDeploymentDiffState? preDeploymentDiffState = default;
            DeploymentSourceAndTarget sourceAndTarget = default;
            DeploymentError error = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("index"u8))
                {
                    index = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = property.Value.GetString().ToDeploymentStepType();
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    status = property.Value.GetString().ToPipelineOperationStatus();
                    continue;
                }
                if (property.NameEquals("preDeploymentDiffState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    preDeploymentDiffState = property.Value.GetString().ToDeploymentExecutionStepPreDeploymentDiffState();
                    continue;
                }
                if (property.NameEquals("sourceAndTarget"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sourceAndTarget = DeploymentSourceAndTarget.DeserializeDeploymentSourceAndTarget(property.Value);
                    continue;
                }
                if (property.NameEquals("error"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    error = DeploymentError.DeserializeDeploymentError(property.Value);
                    continue;
                }
            }
            return new DeploymentExecutionStep(
                index,
                type,
                status,
                preDeploymentDiffState,
                sourceAndTarget,
                error);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static DeploymentExecutionStep FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeDeploymentExecutionStep(document.RootElement);
        }
    }
}
