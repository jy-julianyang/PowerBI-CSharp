// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class AdminReport : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(WebUrl))
            {
                writer.WritePropertyName("webUrl"u8);
                writer.WriteStringValue(WebUrl);
            }
            if (Optional.IsDefined(EmbedUrl))
            {
                writer.WritePropertyName("embedUrl"u8);
                writer.WriteStringValue(EmbedUrl);
            }
            if (Optional.IsDefined(CreatedBy))
            {
                writer.WritePropertyName("createdBy"u8);
                writer.WriteStringValue(CreatedBy);
            }
            if (Optional.IsDefined(ModifiedBy))
            {
                writer.WritePropertyName("modifiedBy"u8);
                writer.WriteStringValue(ModifiedBy);
            }
            if (Optional.IsDefined(CreatedDateTime))
            {
                writer.WritePropertyName("createdDateTime"u8);
                writer.WriteStringValue(CreatedDateTime.Value, "O");
            }
            if (Optional.IsDefined(ModifiedDateTime))
            {
                writer.WritePropertyName("modifiedDateTime"u8);
                writer.WriteStringValue(ModifiedDateTime.Value, "O");
            }
            if (Optional.IsCollectionDefined(Users))
            {
                writer.WritePropertyName("users"u8);
                writer.WriteStartArray();
                foreach (var item in Users)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Subscriptions))
            {
                writer.WritePropertyName("subscriptions"u8);
                writer.WriteStartArray();
                foreach (var item in Subscriptions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(WorkspaceId))
            {
                writer.WritePropertyName("workspaceId"u8);
                writer.WriteStringValue(WorkspaceId.Value);
            }
            writer.WritePropertyName("id"u8);
            writer.WriteStringValue(Id);
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name"u8);
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(DatasetId))
            {
                writer.WritePropertyName("datasetId"u8);
                writer.WriteStringValue(DatasetId);
            }
            if (Optional.IsDefined(AppId))
            {
                writer.WritePropertyName("appId"u8);
                writer.WriteStringValue(AppId);
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description"u8);
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(ReportType))
            {
                writer.WritePropertyName("reportType"u8);
                writer.WriteStringValue(ReportType.Value.ToString());
            }
            if (Optional.IsDefined(OriginalReportId))
            {
                writer.WritePropertyName("originalReportId"u8);
                writer.WriteStringValue(OriginalReportId.Value);
            }
            if (Optional.IsDefined(IsOwnedByMe))
            {
                writer.WritePropertyName("isOwnedByMe"u8);
                writer.WriteBooleanValue(IsOwnedByMe.Value);
            }
            writer.WriteEndObject();
        }

        internal static AdminReport DeserializeAdminReport(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string webUrl = default;
            string embedUrl = default;
            string createdBy = default;
            string modifiedBy = default;
            DateTimeOffset? createdDateTime = default;
            DateTimeOffset? modifiedDateTime = default;
            IList<ReportUser> users = default;
            IList<Subscription> subscriptions = default;
            Guid? workspaceId = default;
            Guid id = default;
            string name = default;
            string datasetId = default;
            string appId = default;
            string description = default;
            ReportBasePropertiesReportType? reportType = default;
            Guid? originalReportId = default;
            bool? isOwnedByMe = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("webUrl"u8))
                {
                    webUrl = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("embedUrl"u8))
                {
                    embedUrl = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createdBy"u8))
                {
                    createdBy = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("modifiedBy"u8))
                {
                    modifiedBy = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createdDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    createdDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("modifiedDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    modifiedDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("users"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ReportUser> array = new List<ReportUser>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ReportUser.DeserializeReportUser(item));
                    }
                    users = array;
                    continue;
                }
                if (property.NameEquals("subscriptions"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<Subscription> array = new List<Subscription>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Subscription.DeserializeSubscription(item));
                    }
                    subscriptions = array;
                    continue;
                }
                if (property.NameEquals("workspaceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    workspaceId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("datasetId"u8))
                {
                    datasetId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("appId"u8))
                {
                    appId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("reportType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    reportType = new ReportBasePropertiesReportType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("originalReportId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    originalReportId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("isOwnedByMe"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isOwnedByMe = property.Value.GetBoolean();
                    continue;
                }
            }
            return new AdminReport(
                id,
                name,
                datasetId,
                appId,
                description,
                reportType,
                originalReportId,
                isOwnedByMe,
                webUrl,
                embedUrl,
                createdBy,
                modifiedBy,
                createdDateTime,
                modifiedDateTime,
                users ?? new ChangeTrackingList<ReportUser>(),
                subscriptions ?? new ChangeTrackingList<Subscription>(),
                workspaceId);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static new AdminReport FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeAdminReport(document.RootElement);
        }

        /// <summary> Convert into a <see cref="RequestContent"/>. </summary>
        internal override RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
