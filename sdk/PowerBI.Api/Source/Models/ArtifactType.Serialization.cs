// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Microsoft.PowerBI.Api.Models
{
    internal static partial class ArtifactTypeExtensions
    {
        public static string ToSerialString(this ArtifactType value) => value switch
        {
            ArtifactType.Report => "Report",
            ArtifactType.PaginatedReport => "PaginatedReport",
            ArtifactType.Dashboard => "Dashboard",
            ArtifactType.Dataset => "Dataset",
            ArtifactType.Dataflow => "Dataflow",
            ArtifactType.PersonalGroup => "PersonalGroup",
            ArtifactType.Group => "Group",
            ArtifactType.Workspace => "Workspace",
            ArtifactType.Capacity => "Capacity",
            ArtifactType.App => "App",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ArtifactType value.")
        };

        public static ArtifactType ToArtifactType(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Report")) return ArtifactType.Report;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "PaginatedReport")) return ArtifactType.PaginatedReport;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Dashboard")) return ArtifactType.Dashboard;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Dataset")) return ArtifactType.Dataset;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Dataflow")) return ArtifactType.Dataflow;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "PersonalGroup")) return ArtifactType.PersonalGroup;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Group")) return ArtifactType.Group;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Workspace")) return ArtifactType.Workspace;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Capacity")) return ArtifactType.Capacity;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "App")) return ArtifactType.App;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ArtifactType value.");
        }
    }
}
