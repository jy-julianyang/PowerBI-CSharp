// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.PowerBI.Api.Models
{
    /// <summary> A Power BI refresh detail entry. </summary>
    public partial class DatasetRefreshDetail
    {
        /// <summary> Initializes a new instance of <see cref="DatasetRefreshDetail"/>. </summary>
        internal DatasetRefreshDetail()
        {
            Objects = new ChangeTrackingList<DatasetRefreshObjects>();
            Messages = new ChangeTrackingList<EngineMessage>();
            RefreshAttempts = new ChangeTrackingList<RefreshAttempt>();
        }

        /// <summary> Initializes a new instance of <see cref="DatasetRefreshDetail"/>. </summary>
        /// <param name="startTime"> The start date and time of the refresh. </param>
        /// <param name="endTime"> The end date and time of the refresh (may be empty if a refresh is in progress). </param>
        /// <param name="type"> The type of processing to perform. </param>
        /// <param name="commitMode"> Determines if objects will be committed in batches or only when complete. </param>
        /// <param name="status"> Dataset operation general status. </param>
        /// <param name="extendedStatus"> Dataset operation detailed status. </param>
        /// <param name="currentRefreshType"> The type of processing for the current iteration. This is useful when `commitMode` is set to `PartialBatch`. </param>
        /// <param name="numberOfAttempts"> The number of attempts for the refresh request. </param>
        /// <param name="objects"> An array of objects included in the refresh request. </param>
        /// <param name="messages"> An array of engine error or warning messages for the refresh request. </param>
        /// <param name="refreshAttempts"> The refresh attempt list. </param>
        internal DatasetRefreshDetail(DateTimeOffset? startTime, DateTimeOffset? endTime, DatasetRefreshDetailType? type, DatasetRefreshDetailCommitMode? commitMode, DatasetRefreshDetailStatus? status, DatasetRefreshDetailExtendedStatus? extendedStatus, DatasetRefreshDetailType? currentRefreshType, int? numberOfAttempts, IReadOnlyList<DatasetRefreshObjects> objects, IReadOnlyList<EngineMessage> messages, IReadOnlyList<RefreshAttempt> refreshAttempts)
        {
            StartTime = startTime;
            EndTime = endTime;
            Type = type;
            CommitMode = commitMode;
            Status = status;
            ExtendedStatus = extendedStatus;
            CurrentRefreshType = currentRefreshType;
            NumberOfAttempts = numberOfAttempts;
            Objects = objects;
            Messages = messages;
            RefreshAttempts = refreshAttempts;
        }

        /// <summary> The start date and time of the refresh. </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> The end date and time of the refresh (may be empty if a refresh is in progress). </summary>
        public DateTimeOffset? EndTime { get; }
        /// <summary> The type of processing to perform. </summary>
        public DatasetRefreshDetailType? Type { get; }
        /// <summary> Determines if objects will be committed in batches or only when complete. </summary>
        public DatasetRefreshDetailCommitMode? CommitMode { get; }
        /// <summary> Dataset operation general status. </summary>
        public DatasetRefreshDetailStatus? Status { get; }
        /// <summary> Dataset operation detailed status. </summary>
        public DatasetRefreshDetailExtendedStatus? ExtendedStatus { get; }
        /// <summary> The type of processing for the current iteration. This is useful when `commitMode` is set to `PartialBatch`. </summary>
        public DatasetRefreshDetailType? CurrentRefreshType { get; }
        /// <summary> The number of attempts for the refresh request. </summary>
        public int? NumberOfAttempts { get; }
        /// <summary> An array of objects included in the refresh request. </summary>
        public IReadOnlyList<DatasetRefreshObjects> Objects { get; }
        /// <summary> An array of engine error or warning messages for the refresh request. </summary>
        public IReadOnlyList<EngineMessage> Messages { get; }
        /// <summary> The refresh attempt list. </summary>
        public IReadOnlyList<RefreshAttempt> RefreshAttempts { get; }
    }
}
