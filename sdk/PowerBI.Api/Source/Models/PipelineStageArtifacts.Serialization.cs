// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class PipelineStageArtifacts
    {
        internal static PipelineStageArtifacts DeserializePipelineStageArtifacts(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            IReadOnlyList<PipelineStageDataset> datasets = default;
            IReadOnlyList<PipelineStageReport> reports = default;
            IReadOnlyList<PipelineStageDashboard> dashboards = default;
            IReadOnlyList<PipelineStageDataflow> dataflows = default;
            IReadOnlyList<PipelineStageDatamart> datamarts = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("datasets"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<PipelineStageDataset> array = new List<PipelineStageDataset>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(PipelineStageDataset.DeserializePipelineStageDataset(item));
                    }
                    datasets = array;
                    continue;
                }
                if (property.NameEquals("reports"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<PipelineStageReport> array = new List<PipelineStageReport>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(PipelineStageReport.DeserializePipelineStageReport(item));
                    }
                    reports = array;
                    continue;
                }
                if (property.NameEquals("dashboards"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<PipelineStageDashboard> array = new List<PipelineStageDashboard>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(PipelineStageDashboard.DeserializePipelineStageDashboard(item));
                    }
                    dashboards = array;
                    continue;
                }
                if (property.NameEquals("dataflows"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<PipelineStageDataflow> array = new List<PipelineStageDataflow>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(PipelineStageDataflow.DeserializePipelineStageDataflow(item));
                    }
                    dataflows = array;
                    continue;
                }
                if (property.NameEquals("datamarts"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<PipelineStageDatamart> array = new List<PipelineStageDatamart>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(PipelineStageDatamart.DeserializePipelineStageDatamart(item));
                    }
                    datamarts = array;
                    continue;
                }
            }
            return new PipelineStageArtifacts(datasets ?? new ChangeTrackingList<PipelineStageDataset>(), reports ?? new ChangeTrackingList<PipelineStageReport>(), dashboards ?? new ChangeTrackingList<PipelineStageDashboard>(), dataflows ?? new ChangeTrackingList<PipelineStageDataflow>(), datamarts ?? new ChangeTrackingList<PipelineStageDatamart>());
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static PipelineStageArtifacts FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializePipelineStageArtifacts(document.RootElement);
        }
    }
}
