// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class DeploymentOptions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AllowCreateArtifact))
            {
                writer.WritePropertyName("allowCreateArtifact"u8);
                writer.WriteBooleanValue(AllowCreateArtifact.Value);
            }
            if (Optional.IsDefined(AllowOverwriteArtifact))
            {
                writer.WritePropertyName("allowOverwriteArtifact"u8);
                writer.WriteBooleanValue(AllowOverwriteArtifact.Value);
            }
            if (Optional.IsDefined(AllowSkipTilesWithMissingPrerequisites))
            {
                writer.WritePropertyName("allowSkipTilesWithMissingPrerequisites"u8);
                writer.WriteBooleanValue(AllowSkipTilesWithMissingPrerequisites.Value);
            }
            if (Optional.IsDefined(AllowPurgeData))
            {
                writer.WritePropertyName("allowPurgeData"u8);
                writer.WriteBooleanValue(AllowPurgeData.Value);
            }
            if (Optional.IsDefined(AllowTakeOver))
            {
                writer.WritePropertyName("allowTakeOver"u8);
                writer.WriteBooleanValue(AllowTakeOver.Value);
            }
            if (Optional.IsDefined(AllowOverwriteTargetArtifactLabel))
            {
                writer.WritePropertyName("allowOverwriteTargetArtifactLabel"u8);
                writer.WriteBooleanValue(AllowOverwriteTargetArtifactLabel.Value);
            }
            writer.WriteEndObject();
        }

        /// <summary> Convert into a <see cref="RequestContent"/>. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
