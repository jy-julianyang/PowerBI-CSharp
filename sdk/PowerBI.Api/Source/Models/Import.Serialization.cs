// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class Import
    {
        internal static Import DeserializeImport(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Guid id = default;
            string name = default;
            ImportState? importState = default;
            IReadOnlyList<Report> reports = default;
            IReadOnlyList<Dataset> datasets = default;
            DateTimeOffset? createdDateTime = default;
            DateTimeOffset? updatedDateTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("importState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    importState = new ImportState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("reports"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<Report> array = new List<Report>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Report.DeserializeReport(item));
                    }
                    reports = array;
                    continue;
                }
                if (property.NameEquals("datasets"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<Dataset> array = new List<Dataset>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Dataset.DeserializeDataset(item));
                    }
                    datasets = array;
                    continue;
                }
                if (property.NameEquals("createdDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    createdDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("updatedDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    updatedDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new Import(
                id,
                name,
                importState,
                reports ?? new ChangeTrackingList<Report>(),
                datasets ?? new ChangeTrackingList<Dataset>(),
                createdDateTime,
                updatedDateTime);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static Import FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeImport(document.RootElement);
        }
    }
}
