// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class PipelineOperation
    {
        internal static PipelineOperation DeserializePipelineOperation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Guid id = default;
            PipelineOperationType? type = default;
            PipelineOperationStatus status = default;
            DateTimeOffset lastUpdatedTime = default;
            DateTimeOffset? executionStartTime = default;
            DateTimeOffset? executionEndTime = default;
            int? sourceStageOrder = default;
            int? targetStageOrder = default;
            PipelineOperationUser performedBy = default;
            PipelineOperationNote note = default;
            DeploymentExecutionPlan executionPlan = default;
            PreDeploymentDiffInformation preDeploymentDiffInformation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    type = new PipelineOperationType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    status = property.Value.GetString().ToPipelineOperationStatus();
                    continue;
                }
                if (property.NameEquals("lastUpdatedTime"u8))
                {
                    lastUpdatedTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("executionStartTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    executionStartTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("executionEndTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    executionEndTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("sourceStageOrder"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sourceStageOrder = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("targetStageOrder"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    targetStageOrder = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("performedBy"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    performedBy = PipelineOperationUser.DeserializePipelineOperationUser(property.Value);
                    continue;
                }
                if (property.NameEquals("note"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    note = PipelineOperationNote.DeserializePipelineOperationNote(property.Value);
                    continue;
                }
                if (property.NameEquals("executionPlan"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    executionPlan = DeploymentExecutionPlan.DeserializeDeploymentExecutionPlan(property.Value);
                    continue;
                }
                if (property.NameEquals("preDeploymentDiffInformation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    preDeploymentDiffInformation = PreDeploymentDiffInformation.DeserializePreDeploymentDiffInformation(property.Value);
                    continue;
                }
            }
            return new PipelineOperation(
                id,
                type,
                status,
                lastUpdatedTime,
                executionStartTime,
                executionEndTime,
                sourceStageOrder,
                targetStageOrder,
                performedBy,
                note,
                executionPlan,
                preDeploymentDiffInformation);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static PipelineOperation FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializePipelineOperation(document.RootElement);
        }
    }
}
