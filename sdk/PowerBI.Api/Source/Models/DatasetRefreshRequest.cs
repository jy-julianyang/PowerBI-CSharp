// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.PowerBI.Api.Models
{
    /// <summary> Power BI dataset refresh request. </summary>
    public partial class DatasetRefreshRequest
    {
        /// <summary> Initializes a new instance of <see cref="DatasetRefreshRequest"/>. </summary>
        /// <param name="notifyOption"> Mail notification options. This parameter is not applicable to enhanced refreshes or API operations with a service principal. </param>
        public DatasetRefreshRequest(NotifyOption notifyOption)
        {
            NotifyOption = notifyOption;
            Objects = new ChangeTrackingList<DatasetRefreshObjects>();
        }

        /// <summary> Initializes a new instance of <see cref="DatasetRefreshRequest"/>. </summary>
        /// <param name="notifyOption"> Mail notification options. This parameter is not applicable to enhanced refreshes or API operations with a service principal. </param>
        /// <param name="type"> The type of processing to perform. </param>
        /// <param name="commitMode"> Determines if objects will be committed in batches or only when complete. </param>
        /// <param name="maxParallelism"> The maximum number of threads on which to run parallel processing commands. </param>
        /// <param name="retryCount"> Number of times the operation will retry before failing. Temporary internal errors may trigger a retry of the refresh, even when this parameter is set to 0. </param>
        /// <param name="objects"> An array of objects to be processed. </param>
        /// <param name="applyRefreshPolicy"> Determine if the policy is applied or not. </param>
        /// <param name="effectiveDate"> If an incremental refresh policy is applied, the `effectiveDate` parameter overrides the current date. </param>
        /// <param name="timeout"> If a `timeout` is specified, each data refresh attempt on the semantic model will adhere to that timeout. Note that a single refresh request can include multiple attempts if `retryCount` is specified, which may cause the total refresh duration to exceed the specified timeout. For instance, setting a `timeout` of 1 hour with a `retryCount` of 2 could result in a total refresh duration of up to 3 hours. Users can adjust the `timeout` to shorten the refresh duration for faster failure detection or extend it beyond the default 5 hours for more complex data refreshes. However, the total refresh duration, including retries, cannot exceed 24 hours. </param>
        internal DatasetRefreshRequest(NotifyOption notifyOption, DatasetRefreshType? type, DatasetCommitMode? commitMode, int? maxParallelism, int? retryCount, IList<DatasetRefreshObjects> objects, bool? applyRefreshPolicy, DateTimeOffset? effectiveDate, string timeout)
        {
            NotifyOption = notifyOption;
            Type = type;
            CommitMode = commitMode;
            MaxParallelism = maxParallelism;
            RetryCount = retryCount;
            Objects = objects;
            ApplyRefreshPolicy = applyRefreshPolicy;
            EffectiveDate = effectiveDate;
            Timeout = timeout;
        }

        /// <summary> Mail notification options. This parameter is not applicable to enhanced refreshes or API operations with a service principal. </summary>
        public NotifyOption NotifyOption { get; }
        /// <summary> The type of processing to perform. </summary>
        public DatasetRefreshType? Type { get; set; }
        /// <summary> Determines if objects will be committed in batches or only when complete. </summary>
        public DatasetCommitMode? CommitMode { get; set; }
        /// <summary> The maximum number of threads on which to run parallel processing commands. </summary>
        public int? MaxParallelism { get; set; }
        /// <summary> Number of times the operation will retry before failing. Temporary internal errors may trigger a retry of the refresh, even when this parameter is set to 0. </summary>
        public int? RetryCount { get; set; }
        /// <summary> An array of objects to be processed. </summary>
        public IList<DatasetRefreshObjects> Objects { get; }
        /// <summary> Determine if the policy is applied or not. </summary>
        public bool? ApplyRefreshPolicy { get; set; }
        /// <summary> If an incremental refresh policy is applied, the `effectiveDate` parameter overrides the current date. </summary>
        public DateTimeOffset? EffectiveDate { get; set; }
        /// <summary> If a `timeout` is specified, each data refresh attempt on the semantic model will adhere to that timeout. Note that a single refresh request can include multiple attempts if `retryCount` is specified, which may cause the total refresh duration to exceed the specified timeout. For instance, setting a `timeout` of 1 hour with a `retryCount` of 2 could result in a total refresh duration of up to 3 hours. Users can adjust the `timeout` to shorten the refresh duration for faster failure detection or extend it beyond the default 5 hours for more complex data refreshes. However, the total refresh duration, including retries, cannot exceed 24 hours. </summary>
        public string Timeout { get; set; }
    }
}
