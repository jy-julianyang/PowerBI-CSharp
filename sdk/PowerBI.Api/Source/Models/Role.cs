// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Microsoft.PowerBI.Api.Models
{
    /// <summary> A role in a datasetâ€™s RLS configuration. </summary>
    public partial class Role
    {
        /// <summary> Initializes a new instance of <see cref="Role"/>. </summary>
        /// <param name="name"> The name of the role. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public Role(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="Role"/>. </summary>
        /// <param name="name"> The name of the role. </param>
        /// <param name="modelPermission"> The permissions that the role has on the dataset. For example, Read. </param>
        /// <param name="members"> An array listing the members of the role. </param>
        /// <param name="tablePermissions"> An array that lists all the filters defined for the role. </param>
        internal Role(string name, string modelPermission, RoleMember members, RoleTablePermission tablePermissions)
        {
            Name = name;
            ModelPermission = modelPermission;
            Members = members;
            TablePermissions = tablePermissions;
        }

        /// <summary> The name of the role. </summary>
        public string Name { get; set; }
        /// <summary> The permissions that the role has on the dataset. For example, Read. </summary>
        public string ModelPermission { get; set; }
        /// <summary> An array listing the members of the role. </summary>
        public RoleMember Members { get; set; }
        /// <summary> An array that lists all the filters defined for the role. </summary>
        public RoleTablePermission TablePermissions { get; set; }
    }
}
