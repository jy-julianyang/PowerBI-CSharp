#################################################################################
#   Onebranch Pipelines - PR MSBuild (CDPXMigrated)                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 1
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: skip

  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      tsa:
        enabled: false
      cg:
        failOnAlert: false

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          type: windows  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs

        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          ob_outputDirectory: '$(OUTPUTROOT)' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
          ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl
          ob_artifactBaseName: 'drop'
          ob_sdl_cg_failOnAlert: false

        steps:
          - task: onebranch.pipeline.version@1
            displayName: 'sdk version'
            inputs:
              system: 'Buildrevision'
              major: '0'
              minor: '0'
              exclude_commit: false
              assembly_version: 'majorminoronly'
              assembly_file_version: 'fullversionnumber'
              assembly_informational_version: 'fullversionnumber'

          - task: NuGetToolInstaller@1
            displayName: 'Install Nuget'
            inputs:
              versionSpec: '*'
              checkLatest: true

          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '7.0.305' #add the version which is required.
              installationPath: 'C:\Program Files\dotnet\' #this is to ensure that we are installing the dotnet at the same location as container by default install the dotnet sdks.

          - task: CmdLine@2
            displayName: 'Nuget restore'
            inputs:
              script: $(Build.SourcesDirectory)\scripts\nuget-restore.cmd
              workingDirectory: '$(Build.SourcesDirectory)'

          - task: CmdLine@2
            displayName: 'Build SDK'
            inputs:
              script: $(Build.SourcesDirectory)\scripts\build-sdk.cmd
              workingDirectory: '$(Build.SourcesDirectory)'

          - task: onebranch.pipeline.signing@1
            displayName: 'Sign binaries'
            inputs:
              command: 'sign'
              signing_environment: 'azure-ado'
              signing_profile: 'internal_azure_service'
              files_to_sign: '**\bin\**\Microsoft.PowerBI.Api.dll;**\obj\**\Microsoft.PowerBI.Api.dll'
              search_root: '$(Build.SourcesDirectory)\sdk\PowerBI.Api'

          - task: CmdLine@2
            displayName: 'pack sdk\**\PowerBI.Api.csproj for dev feed'
            inputs:
              script: $(Build.SourcesDirectory)\scripts\pack-sdk-dev.cmd
              workingDirectory: '$(Build.SourcesDirectory)'

          - task: CopyFiles@2
            displayName: 'Copy log from build SDK'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)
              Contents: |
                **\msbuild.log
              TargetFolder: '$(OUTPUTROOT)\build\_post_sage_build_sdk\_logs'

          - task: CopyFiles@2
            displayName: 'Copy build artifacts to output'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)\sdk\PowerBI.Api
              Contents: |
                **\bin\**\Microsoft.PowerBI.Api.dll
                **\obj\**\Microsoft.PowerBI.Api.dll
              TargetFolder: '$(OUTPUTROOT)\build'

          - task: CopyFiles@2
            displayName: 'Copy content package to output'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)\pack\Dev
              Contents: |
                **\*
              TargetFolder: '$(OUTPUTROOT)\package'

          - task: CmdLine@2
            displayName: 'Test sdk'
            inputs:
              script: $(Build.SourcesDirectory)\scripts\run-tests.cmd
              workingDirectory: '$(Build.SourcesDirectory)'

          - task: PublishTestResults@2
            displayName: 'Publish test results'
            inputs:
              testResultsFormat: vstest
              testResultsFiles: '**\*'
              searchFolder: '$(Build.SourcesDirectory)\TestResults'
              failTaskOnFailedTests: true

          - task: CopyFiles@2
            displayName: 'Copy test results'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)\TestResults
              Contents: |
                **\*
              TargetFolder: '$(OUTPUTROOT)\test\_post_command_test_sdk\_testresults'

          - task: onebranch.pipeline.signing@1
            displayName: 'Sign binaries'
            inputs:
              command: 'sign'
              signing_environment: 'azure-ado'
              signing_profile: 'internal_azure_service'
              files_to_sign: '**'
              search_root: '$(OUTPUTROOT)\package'